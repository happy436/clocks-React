{"version":3,"sources":["redux/themeReducer.js","components/toggleTheme/ToggleTheme.jsx","components/analog/Analog.jsx","components/Calendar/Calendar.jsx","components/digital/Digital.jsx","redux/clockReducer.js","redux/dateReducer.js","App.js","redux/redux-store.js","index.js"],"names":["CHANGE_THEME","initialState","themes","activeTheme","themeReducer","state","action","type","length","ToggleThemeBtn","props","className","ActiveTheme","onClick","store","dispatch","Analog","hh","hour","mm","minute","ss","second","style","transform","months","Calendar","year","month","day","Digital","id","CHANGE_CLOCK","clocks","activeClock","clockReducer","NEW_DATE","time","Date","dateReducer","App","getState","getFullYear","monthIndex","getMonth","getDate","getHours","getMinutes","getSeconds","window","setInterval","reducers","combineReducers","createStore","reRender","ReactDOM","render","StrictMode","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.052de0e8.chunk.js","sourcesContent":["const CHANGE_THEME = \"CHANGE_THEME\"\r\n\r\nlet initialState = {\r\n    themes:[\"dark\",\"light\",\"colorful\"],\r\n    activeTheme:0\r\n}\r\n\r\nconst themeReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case CHANGE_THEME:\r\n            if(state.activeTheme < state.themes.length - 1){\r\n                state.activeTheme++\r\n                return state\r\n            } else {\r\n                state.activeTheme = 0\r\n                return state\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const themeChangeActionCreator = () => {\r\n    return{\r\n        type: CHANGE_THEME\r\n    }\r\n}\r\n\r\nexport default themeReducer","import React from \"react\"\r\nimport {themeChangeActionCreator} from \"../../redux/themeReducer\"\r\nimport \"./ToggleTheme.css\"\r\n\r\nfunction ToggleThemeBtn(props){\r\n\r\n    let changeTheme = () => {\r\n        props.store.dispatch(themeChangeActionCreator())\r\n    }\r\n\r\n    return(\r\n        <div className={`toggleClass ${props.ActiveTheme}`} onClick={changeTheme}>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ToggleThemeBtn","import React from \"react\"\r\nimport \"./Analog.css\"\r\n\r\nfunction Analog(props){\r\n    \r\n    const deg = 6\r\n    let hh = props.hour * 30\r\n    let mm = props.minute * deg\r\n    let ss = props.second * deg\r\n\r\n    return(\r\n        <div className=\"box\">\r\n            <div className=\"clock analog\">\r\n                <div className=\"hour\">\r\n                    <div className=\"hr\" style={{transform:`rotate(${hh}deg)`}}></div>\r\n                </div>\r\n                <div className=\"min\">\r\n                    <div className=\"mn\" style={{transform:`rotate(${mm}deg)`}}></div>\r\n                </div>\r\n                <div className=\"sec\">\r\n                    <div className=\"sc\" style={{transform:`rotate(${ss}deg)`}}></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Analog","import React from \"react\"\r\nimport \"./Calendar.css\"\r\n\r\nconst months = ['January', \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\r\n\r\nfunction Calendar(props){\r\n    return(\r\n        <div className=\"box calendar\">\r\n            <div className=\"clock\">\r\n                <div className=\"year\">{props.year}</div>\r\n                <div className=\"month\">{months[props.month]}</div>\r\n                <div className=\"day\">{props.day}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Calendar","import React from \"react\"\r\nimport \"./Digital.css\"\r\n\r\nfunction Digital(props){\r\n\r\n    return(\r\n        <div className=\"box digital\">\r\n            <div className=\"clock\">\r\n                <div className=\"hour\">\r\n                    <div className=\"hr\" id=\"hr\">{props.hour}</div>\r\n                </div>\r\n                <div className=\"divide\">:</div>\r\n                <div className=\"min\">\r\n                    <div className=\"mn\" id=\"mn\">{props.minute}</div>\r\n                </div>\r\n                <div className=\"divide\">:</div>\r\n                <div className=\"sec\">\r\n                    <div className=\"sc\" id=\"sc\">{props.second}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Digital","const CHANGE_CLOCK = \"CHANGE_CLOCK\"\r\n\r\nlet initialState = {\r\n    clocks:['analog', 'digital', 'calendar'],\r\n    activeClock:0\r\n}\r\n\r\nconst clockReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case CHANGE_CLOCK:\r\n            if(state.activeClock < state.clocks.length - 1){\r\n                state.activeClock++\r\n                return state\r\n            } else {\r\n                state.activeClock = 0\r\n                return state\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const clockChangeActionCreator = () => {\r\n    return{\r\n        type: CHANGE_CLOCK\r\n    }\r\n}\r\n\r\nexport default clockReducer","const NEW_DATE = \"NEW_DATE\"\r\n\r\nlet initialState = {\r\n    time: new Date()\r\n}\r\n\r\nconst dateReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case NEW_DATE:\r\n            state.time = new Date()\r\n            return state\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const dateActionCreator = () => {\r\n    return{\r\n        type: NEW_DATE\r\n    }\r\n}\r\n\r\nexport default dateReducer","import './App.css';\nimport ToggleThemeBtn from \"./components/toggleTheme/ToggleTheme\";\nimport Analog from \"./components/analog/Analog\";\nimport Calendar from \"./components/Calendar/Calendar.jsx\"\nimport Digital from \"./components/digital/Digital.jsx\"\nimport {clockChangeActionCreator} from \"./redux/clockReducer\"\nimport {dateActionCreator} from \"./redux/dateReducer\"\n\nfunction App(props) {\n    let state = props.store.getState()\n    let activeTheme = state.themeReducer.activeTheme\n    let year = state.dateReducer.time.getFullYear()\n    let monthIndex = state.dateReducer.time.getMonth() \n    let day = state.dateReducer.time.getDate()\n\n    let hour = state.dateReducer.time.getHours()\n    let minute = state.dateReducer.time.getMinutes()\n    let second = state.dateReducer.time.getSeconds()\n\n    if(hour < 10){\n        hour = `0${hour}`\n    } else if(minute < 10){\n        minute = `0${minute}`\n    } else if(second < 10){\n        second = `0${second}`\n    }\n\n    let clocks = [\n                <Analog\n                    hour={hour}\n                    minute={minute}\n                    second={second}\n                />,\n                <Digital\n                    hour={hour}\n                    minute={minute}\n                    second={second}\n                />, \n                <Calendar \n                    year={year}\n                    month={monthIndex}\n                    day={day}\n                />\n            ]\n    let ActiveTheme = state.themeReducer.themes[activeTheme]\n\n    window.state = state\n\n    let changeClockFunk = () => {\n        props.store.dispatch(clockChangeActionCreator())\n    }\n\n    setInterval(() => {props.store.dispatch(dateActionCreator())},1000)\n\n    return (\n        <div className=\"AppWrapper\">\n            <div className={`App ${ActiveTheme}`} onClick={changeClockFunk}>\n                <div className=\"container\">\n                    {clocks[state.clockReducer.activeClock]}\n                </div>\n            </div>\n            <ToggleThemeBtn store={props.store} ActiveTheme={ActiveTheme}/>\n        </div>\n    );\n}\n\nexport default App;\n","import { combineReducers, createStore } from \"redux\";\r\nimport clockReducer from \"./clockReducer\";\r\nimport dateReducer from \"./dateReducer\";\r\nimport themeReducer from \"./themeReducer\"\r\n\r\nlet reducers = combineReducers(\r\n    {\r\n        themeReducer: themeReducer, \r\n        clockReducer: clockReducer,\r\n        dateReducer: dateReducer,\r\n    });\r\n\r\nlet store = createStore(reducers);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from \"./redux/redux-store\"\n\nlet reRender = (state) => {\n    ReactDOM.render(\n        <React.StrictMode>\n            <App\n                store={store}\n            />\n        </React.StrictMode>,\n        document.getElementById('root')\n    );\n}\n\n\nreRender(store.getState())\n\nstore.subscribe(() => {\n    let state = store.getState()\n    reRender(state);\n})"],"sourceRoot":""}