{"version":3,"sources":["redux/themeReducer.js","components/toggleTheme/ToggleTheme.jsx","redux/dateReducer.js","components/analog/Analog.jsx","components/Calendar/Calendar.jsx","components/digital/Digital.jsx","redux/clockReducer.js","App.js","redux/redux-store.js","index.js"],"names":["CHANGE_THEME","initialState","themes","activeTheme","themeReducer","state","action","type","length","ToggleThemeBtn","props","className","loadTheme","onClick","dispatch","localStorage","setItem","NEW_DATE","time","Date","dateActionCreator","dateReducer","Analog","setInterval","hh","hour","mm","minute","ss","second","style","transform","months","Calendar","year","month","day","Digital","id","CHANGE_CLOCK","clocks","activeClock","clockReducer","App","store","getState","activeThemeIndex","getFullYear","monthIndex","getMonth","getDate","getHours","getMinutes","getSeconds","ActiveTheme","getItem","reducers","combineReducers","createStore","applyMiddleware","thunk","reRender","ReactDOM","render","StrictMode","document","getElementById","subscribe"],"mappings":"sQAAMA,G,YAAe,gBAEjBC,EAAe,CACfC,OAAO,CAAC,OAAQ,QAAS,YACzBC,YAAY,GA0BDC,EAvBM,WAAmC,IAAlCC,EAAiC,uDAAzBJ,EAAcK,EAAW,uCAEnD,OAAOA,EAAOC,OACLP,EACEK,EAAMF,YAAcE,EAAMH,OAAOM,OAAS,GACzCH,EAAMF,cACCE,IAEPA,EAAMF,YAAc,EACbE,GAGJA,G,eCFJI,MAbf,SAAwBC,GAOpB,OACI,qBAAKC,UAAS,sBAAiBD,EAAME,aAAeC,QANtC,WACdH,EAAMI,SDkBJ,CACFP,KAAMP,IClBNe,aAAaC,QAAQ,QAASN,EAAML,MAAMF,iBCR5Cc,G,MAAW,YAEbhB,EAAe,CACfiB,KAAM,IAAIC,MAaDC,EAAoB,WAC7B,MAAM,CACFb,KAAMU,IAICI,EAhBK,WAAmC,IAAlChB,EAAiC,uDAAzBJ,EAAcK,EAAW,uCAClD,OAAOA,EAAOC,OACLU,GACDZ,EAAMa,KAAO,IAAIC,KACVd,GAEAA,GCmBJiB,MA3Bf,SAAgBZ,GAEZa,aAAY,WAAOb,EAAMI,SAASM,OAAsB,KAGxD,IACII,EAAkB,GAAbd,EAAMe,KACXC,EAFQ,EAEHhB,EAAMiB,OACXC,EAHQ,EAGHlB,EAAMmB,OAEf,OACI,qBAAKlB,UAAU,MAAf,SACI,sBAAKA,UAAU,eAAf,UACI,qBAAKA,UAAU,OAAf,SACI,qBAAKA,UAAU,KAAKmB,MAAO,CAACC,UAAU,UAAD,OAAWP,EAAX,aAEzC,qBAAKb,UAAU,MAAf,SACI,qBAAKA,UAAU,KAAKmB,MAAO,CAACC,UAAU,UAAD,OAAWL,EAAX,aAEzC,qBAAKf,UAAU,MAAf,SACI,qBAAKA,UAAU,KAAKmB,MAAO,CAACC,UAAU,UAAD,OAAWH,EAAX,mBCpBnDI,G,MAAS,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,aAmB/GC,MAjBf,SAAkBvB,GAMd,OAJAa,aAAY,WAAOb,EAAMI,SAASM,OAAsB,OAKpD,qBAAKT,UAAU,eAAf,SACI,sBAAKA,UAAU,QAAf,UACI,qBAAKA,UAAU,OAAf,SAAuBD,EAAMwB,OAC7B,qBAAKvB,UAAU,QAAf,SAAwBqB,EAAOtB,EAAMyB,SACrC,qBAAKxB,UAAU,MAAf,SAAsBD,EAAM0B,Y,MCwB7BC,MArCf,SAAiB3B,GAEba,aAAY,WAAOb,EAAMI,SAASM,OAAsB,KAGxD,IAAIK,EAAOf,EAAMe,KACbE,EAASjB,EAAMiB,OACfE,EAASnB,EAAMmB,OAWnB,OARGJ,EAAO,GACNA,EAAI,WAAOA,GACLE,EAAS,GACfA,EAAM,WAAOA,GACPjB,EAAMmB,OAAS,KACrBA,EAAM,WAAOA,IAIb,qBAAKlB,UAAU,cAAf,SACI,sBAAKA,UAAU,QAAf,UACI,qBAAKA,UAAU,OAAf,SACI,qBAAKA,UAAU,KAAK2B,GAAG,KAAvB,SAA6Bb,MAEjC,qBAAKd,UAAU,SAAf,eACA,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,KAAK2B,GAAG,KAAvB,SAA6BX,MAEjC,qBAAKhB,UAAU,SAAf,eACA,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,KAAK2B,GAAG,KAAvB,SAA6BT,YClC3CU,EAAe,eAEjBtC,EAAe,CACfuC,OAAO,CAAC,SAAU,UAAW,YAC7BC,YAAY,GAwBDC,EArBM,WAAmC,IAAlCrC,EAAiC,uDAAzBJ,EAAcK,EAAW,uCACnD,OAAOA,EAAOC,OACLgC,EACElC,EAAMoC,YAAcpC,EAAMmC,OAAOhC,OAAS,GACzCH,EAAMoC,cACCpC,IAEPA,EAAMoC,YAAc,EACbpC,GAGJA,GC8DJsC,MAzEf,SAAajC,GACT,IAAIL,EAAQK,EAAMkC,MAAMC,WACpBC,EAAmBzC,EAAMD,aAAaD,YACtC+B,EAAO7B,EAAMgB,YAAYH,KAAK6B,cAC9BC,EAAa3C,EAAMgB,YAAYH,KAAK+B,WACpCb,EAAM/B,EAAMgB,YAAYH,KAAKgC,UAE7BzB,EAAOpB,EAAMgB,YAAYH,KAAKiC,WAC9BxB,EAAStB,EAAMgB,YAAYH,KAAKkC,aAChCvB,EAASxB,EAAMgB,YAAYH,KAAKmC,aAEhCvC,EAAWJ,EAAMkC,MAAM9B,SAEvB0B,EAAS,CACD,cAAC,EAAD,CACIf,KAAMA,EACNE,OAAQA,EACRE,OAAQA,EACRf,SAAUA,IAEd,cAAC,EAAD,CACIW,KAAMA,EACNE,OAAQA,EACRE,OAAQA,EACRf,SAAUA,IAEd,cAAC,EAAD,CACIoB,KAAMA,EACNC,MAAOa,EACPZ,IAAKA,EACLtB,SAAUA,KAGtBwC,EAAcjD,EAAMD,aAAaF,OAAO4C,GAexClC,EAAY,WACZ,OAAGG,aAAawC,QAAQ,SACblD,EAAMD,aAAaF,OAAOa,aAAawC,QAAQ,UAE/ClD,EAAMD,aAAaF,OAAOG,EAAMD,aAAaD,cAI5D,OACI,sBAAKQ,UAAU,aAAf,UACI,qBAAKA,UAAS,cAASC,KAAeC,QAvBxB,WAClBH,EAAMkC,MAAM9B,SDpBV,CACFP,KAAMgC,ICoBNxB,aAAaC,QAAQ,QAASX,EAAMqC,aAAaD,cAqB7C,SACI,qBAAK9B,UAAU,YAAf,SAlBLI,aAAawC,QAAQ,SACbf,EAAOzB,aAAawC,QAAQ,UAE5Bf,EAAOnC,EAAMqC,aAAaD,iBAmBjC,cAAC,EAAD,CACIpC,MAAOA,EAAMD,aACbU,SAAUJ,EAAMkC,MAAM9B,SACtBwC,YAAaA,EACb1C,UAAWA,Q,cCpEvB4C,EAAWC,YACX,CACIrD,aAAcA,EACdsC,aAAcA,EACdrB,YAAaA,IAKNuB,EAFHc,YAAYF,EAAUG,YAAgBC,MCP9CC,EAAW,SAACxD,GACZyD,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,CACIpB,MAAOA,MAGfqB,SAASC,eAAe,UAKhCL,EAASjB,EAAMC,YAEfD,EAAMuB,WAAU,WACAvB,EAAMC,WAClBgB,S","file":"static/js/main.fe2ffa31.chunk.js","sourcesContent":["const CHANGE_THEME = \"CHANGE_THEME\"\r\n\r\nlet initialState = {\r\n    themes:[\"dark\", \"light\", \"colorful\"],\r\n    activeTheme:0\r\n}\r\n\r\nconst themeReducer = (state = initialState, action) => {\r\n    \r\n    switch(action.type){\r\n        case CHANGE_THEME:\r\n            if(state.activeTheme < state.themes.length - 1){\r\n                state.activeTheme++\r\n                return state\r\n            } else {\r\n                state.activeTheme = 0\r\n                return state\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n    \r\n}\r\n\r\nexport const themeChangeActionCreator = () => {\r\n    return{\r\n        type: CHANGE_THEME\r\n    }\r\n}\r\n\r\nexport default themeReducer","import React from \"react\"\r\nimport {themeChangeActionCreator} from \"../../redux/themeReducer\"\r\nimport \"./ToggleTheme.css\"\r\n\r\nfunction ToggleThemeBtn(props){\r\n\r\n    let changeTheme = () => {\r\n        props.dispatch(themeChangeActionCreator())\r\n        localStorage.setItem('theme', props.state.activeTheme)\r\n    }\r\n\r\n    return(\r\n        <div className={`toggleClass ${props.loadTheme()}`} onClick={changeTheme}>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ToggleThemeBtn","const NEW_DATE = \"NEW_DATE\"\r\n\r\nlet initialState = {\r\n    time: new Date()\r\n}\r\n\r\nconst dateReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case NEW_DATE:\r\n            state.time = new Date()\r\n            return state\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const dateActionCreator = () => {\r\n    return{\r\n        type: NEW_DATE\r\n    }\r\n}\r\n\r\nexport default dateReducer","import React from \"react\"\r\nimport \"./Analog.css\"\r\nimport {dateActionCreator} from \"../../redux/dateReducer\"\r\n\r\nfunction Analog(props){\r\n\r\n    setInterval(() => {props.dispatch(dateActionCreator())},1000)\r\n    /* props.dispatch(dateActionCreator()) */\r\n    \r\n    const deg = 6\r\n    let hh = props.hour * 30\r\n    let mm = props.minute * deg\r\n    let ss = props.second * deg\r\n\r\n    return(\r\n        <div className=\"box\">\r\n            <div className=\"clock analog\">\r\n                <div className=\"hour\">\r\n                    <div className=\"hr\" style={{transform:`rotate(${hh}deg)`}}></div>\r\n                </div>\r\n                <div className=\"min\">\r\n                    <div className=\"mn\" style={{transform:`rotate(${mm}deg)`}}></div>\r\n                </div>\r\n                <div className=\"sec\">\r\n                    <div className=\"sc\" style={{transform:`rotate(${ss}deg)`}}></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Analog","import React from \"react\"\r\nimport \"./Calendar.css\"\r\nimport {dateActionCreator} from \"../../redux/dateReducer\"\r\n\r\nconst months = ['January', \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\r\n\r\nfunction Calendar(props){\r\n\r\n    setInterval(() => {props.dispatch(dateActionCreator())},43200000)\r\n    /* props.dispatch(dateActionCreator()) */\r\n\r\n    \r\n    return(\r\n        <div className=\"box calendar\">\r\n            <div className=\"clock\">\r\n                <div className=\"year\">{props.year}</div>\r\n                <div className=\"month\">{months[props.month]}</div>\r\n                <div className=\"day\">{props.day}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Calendar","import React from \"react\"\r\nimport \"./Digital.css\"\r\nimport {dateActionCreator} from \"../../redux/dateReducer\"\r\n\r\nfunction Digital(props){\r\n\r\n    setInterval(() => {props.dispatch(dateActionCreator())},1000)\r\n    /* props.dispatch(dateActionCreator()) */\r\n\r\n    let hour = props.hour\r\n    let minute = props.minute\r\n    let second = props.second\r\n    \r\n\r\n    if(hour < 10){\r\n        hour = `0${hour}`\r\n    } else if(minute < 10){\r\n        minute = `0${minute}`\r\n    } else if(props.second < 10){\r\n        second = `0${second}`\r\n    }\r\n\r\n    return(\r\n        <div className=\"box digital\">\r\n            <div className=\"clock\">\r\n                <div className=\"hour\">\r\n                    <div className=\"hr\" id=\"hr\">{hour}</div>\r\n                </div>\r\n                <div className=\"divide\">:</div>\r\n                <div className=\"min\">\r\n                    <div className=\"mn\" id=\"mn\">{minute}</div>\r\n                </div>\r\n                <div className=\"divide\">:</div>\r\n                <div className=\"sec\">\r\n                    <div className=\"sc\" id=\"sc\">{second}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Digital","const CHANGE_CLOCK = \"CHANGE_CLOCK\"\r\n\r\nlet initialState = {\r\n    clocks:['analog', 'digital', 'calendar'],\r\n    activeClock:0\r\n}\r\n\r\nconst clockReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case CHANGE_CLOCK:\r\n            if(state.activeClock < state.clocks.length - 1){\r\n                state.activeClock++\r\n                return state\r\n            } else {\r\n                state.activeClock = 0\r\n                return state\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const clockChangeActionCreator = () => {\r\n    return{\r\n        type: CHANGE_CLOCK\r\n    }\r\n}\r\n\r\nexport default clockReducer","import './App.css';\nimport ToggleThemeBtn from \"./components/toggleTheme/ToggleTheme\";\nimport Analog from \"./components/analog/Analog\";\nimport Calendar from \"./components/Calendar/Calendar.jsx\"\nimport Digital from \"./components/digital/Digital.jsx\"\nimport {clockChangeActionCreator} from \"./redux/clockReducer\"\n\nfunction App(props) {\n    let state = props.store.getState()\n    let activeThemeIndex = state.themeReducer.activeTheme\n    let year = state.dateReducer.time.getFullYear()\n    let monthIndex = state.dateReducer.time.getMonth() \n    let day = state.dateReducer.time.getDate()\n\n    let hour = state.dateReducer.time.getHours()\n    let minute = state.dateReducer.time.getMinutes()\n    let second = state.dateReducer.time.getSeconds()\n\n    let dispatch = props.store.dispatch\n\n    let clocks = [\n                <Analog\n                    hour={hour}\n                    minute={minute}\n                    second={second}\n                    dispatch={dispatch}\n                />,\n                <Digital\n                    hour={hour}\n                    minute={minute}\n                    second={second}\n                    dispatch={dispatch}\n                />, \n                <Calendar \n                    year={year}\n                    month={monthIndex}\n                    day={day}\n                    dispatch={dispatch}\n                />\n            ]\n    let ActiveTheme = state.themeReducer.themes[activeThemeIndex]\n\n    let changeClockFunk = () => {\n        props.store.dispatch(clockChangeActionCreator())\n        localStorage.setItem('clock', state.clockReducer.activeClock)\n    }\n\n    let loadClock = () => {\n        if(localStorage.getItem('clock')){\n            return clocks[localStorage.getItem('clock')]\n        } else {\n            return clocks[state.clockReducer.activeClock]\n        }\n    }\n\n    let loadTheme = () => {\n        if(localStorage.getItem('theme')){\n            return state.themeReducer.themes[localStorage.getItem('theme')]\n        } else {\n            return state.themeReducer.themes[state.themeReducer.activeTheme]\n        }\n    }\n\n    return (\n        <div className=\"AppWrapper\">\n            <div className={`App ${loadTheme()}`} onClick={changeClockFunk}>\n                <div className=\"container\">\n                    {loadClock()}\n                </div>\n            </div>\n            <ToggleThemeBtn \n                state={state.themeReducer}\n                dispatch={props.store.dispatch} \n                ActiveTheme={ActiveTheme} \n                loadTheme={loadTheme}\n            />\n        </div>\n    );\n}\n\nexport default App;\n","import { combineReducers, createStore, applyMiddleware } from \"redux\";\r\nimport clockReducer from \"./clockReducer\";\r\nimport dateReducer from \"./dateReducer\";\r\nimport themeReducer from \"./themeReducer\"\r\nimport thunk from 'redux-thunk'\r\n\r\nlet reducers = combineReducers(\r\n    {\r\n        themeReducer: themeReducer, \r\n        clockReducer: clockReducer,\r\n        dateReducer: dateReducer,\r\n    });\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunk));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from \"./redux/redux-store\"\n\nlet reRender = (state) => {\n    ReactDOM.render(\n        <React.StrictMode>\n            <App\n                store={store}\n            />\n        </React.StrictMode>,\n        document.getElementById('root')\n    );\n}\n\n\nreRender(store.getState())\n\nstore.subscribe(() => {\n    let state = store.getState()\n    reRender(state);\n})"],"sourceRoot":""}